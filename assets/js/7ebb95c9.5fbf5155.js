"use strict";(self.webpackChunkessif_lab=self.webpackChunkessif_lab||[]).push([[7184],{6710:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var n=a(3117),r=a(102),i=(a(7294),a(3905)),l=(a(4996),["components"]),s={id:"terminology-construction",title:"Terminology Construction",hide_table_of_contents:!0,scopetag:"tev2",date:20220722},o=void 0,p={unversionedId:"tev2/terminology-construction",id:"tev2/terminology-construction",title:"Terminology Construction",description:"The entire section on Terminology Engine v 2 (TEv2) is still under construction.",source:"@site/docs/tev2/terminology-construction.md",sourceDirName:"tev2",slug:"/tev2/terminology-construction",permalink:"/framework/docs/tev2/terminology-construction",draft:!1,editUrl:"https://github.com/essif-lab/framework/-/tree/master/docs/tev2/terminology-construction.md",tags:[],version:"current",frontMatter:{id:"terminology-construction",title:"Terminology Construction",hide_table_of_contents:!0,scopetag:"tev2",date:20220722},sidebar:"tev2SideBar",previous:{title:"MRG (Machine Readable Glossary)",permalink:"/framework/docs/tev2/tev2-spec-mrg"},next:{title:"Curated Texts",permalink:"/framework/docs/tev2/ctext"}},m={},d=[{value:"Term Selection Instruction Syntax",id:"syntax",level:2},{value:"Adding terms to the tuple set",id:"syntax-add",level:3},{value:"Removing terms from the tuple set",id:"syntax-remove",level:3},{value:"Renaming a term in the tuple set",id:"syntax-rename",level:3}],h={toc:d};function k(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The entire section on Terminology Engine v 2 (TEv2) is still under construction.",(0,i.kt)("br",null),"\nAs TEv2 is not (yet) available, the texts that specify the tool are still 'raw', i.e. not yet processed.",(0,i.kt)("br",null),(0,i.kt)("a",{parentName:"p",href:"@"},"readers")," will need to see through some (currently unprocessed) notational conventions."))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"@"},"Curators")," need the ability to construct (different versions of) the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," for any ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope")," they ","[curate]",". Conceptually, such a construction is equivalent with constructing a set of tuples ",(0,i.kt)("inlineCode",{parentName:"p"},"{ [termid, term, grouptags] }"),", where ",(0,i.kt)("inlineCode",{parentName:"p"},"termid")," ",(0,i.kt)("a",{parentName:"p",href:"@"},"identifies")," the meaning of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"term"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"term")," is the (humanly recognizable) ",(0,i.kt)("a",{parentName:"p",href:"term@"},"word or phrase")," that represents this meaning, and ",(0,i.kt)("inlineCode",{parentName:"p"},"grouptags")," is a set of ",(0,i.kt)("a",{parentName:"p",href:"@"},"grouptags")," that the tuple is associated with; and all this is within the context of a specific version of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," of a specific ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope"),"."),(0,i.kt)("p",null,"The process by which such a tuple-set is constructed is very simple: starting with an empty set, a list of so-called 'term selection criteria' instructions is sequentially processed, where the processing of each such instruction adds or removes tuples to/from the set, or changes the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"term")," part of a specific tuple (renaming)."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"@"},"Curators")," create and maintain the list of 'term selection criteria' instructions for a specific (version of a) ",(0,i.kt)("a",{parentName:"p",href:"@"},"terminology")," in the ",(0,i.kt)("a",{parentName:"p",href:"tev2-spec-saf#terminology"},(0,i.kt)("inlineCode",{parentName:"a"},"versions")," section")," of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"SAF")," of the ",(0,i.kt)("a",{parentName:"p",href:"@"},"scope"),"."),(0,i.kt)("h2",{id:"syntax"},"Term Selection Instruction Syntax"),(0,i.kt)("p",null,"We have distinct syntaxes to manipulate the set of tuples, each of which is specified in a subsequent section, that also describes how it will affect the tuple set under construction."),(0,i.kt)("h3",{id:"syntax-add"},"Adding terms to the tuple set"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"@"},"curator")," can add ",(0,i.kt)("a",{parentName:"p",href:"@"},"terms")," to the tuple set from different sources, i.e."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"@"},"terms")," that are defined in a ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated text")," that exists in the current ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope"),", and"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"@"},"terms")," that are defined by an entry in some ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG"),".")),(0,i.kt)("p",null,"The following syntaxes can be used for adding terms (whitespace is disregarded):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"tags [ <grouptagslist> ] @<scopetag>:<vsntag>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"termids [ <termidlist> ] @<scopetag>:<vsntag>")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"* @<scopetag>:<vsntag>"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Examples"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Instruction"),(0,i.kt)("th",{parentName:"tr",align:"left"},"What it does when processed"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tags[management,governance]@essiflab")),(0,i.kt)("td",{parentName:"tr",align:"left"},"adds all ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," that are part of the currently used ",(0,i.kt)("a",{parentName:"td",href:"@"},"terminology")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope")," ",(0,i.kt)("inlineCode",{parentName:"td"},"essiflab"),", that have the ",(0,i.kt)("a",{parentName:"td",href:"@"},"grouptag")," ",(0,i.kt)("inlineCode",{parentName:"td"},"management")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"governance"),", to the type set.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"termids[party]@essiflab:v3.1")),(0,i.kt)("td",{parentName:"tr",align:"left"},"adds the term ",(0,i.kt)("inlineCode",{parentName:"td"},"party")," from version ",(0,i.kt)("inlineCode",{parentName:"td"},"v3.1")," of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"terminology")," of ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope")," ",(0,i.kt)("inlineCode",{parentName:"td"},"essiflab"),"."))))),(0,i.kt)("p",null,"  where:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"symbol"),(0,i.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<vsntag>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the (optional) ",(0,i.kt)("a",{parentName:"td",href:"@"},"versiontag")," that ",(0,i.kt)("a",{parentName:"td",href:"@"},"identifies")," the version of the ",(0,i.kt)("a",{parentName:"td",href:"@"},"terminology")," from which ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," are to be selected.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<scopetag>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the (optional) ",(0,i.kt)("a",{parentName:"td",href:"@"},"scopetag")," that ",(0,i.kt)("a",{parentName:"td",href:"@"},"identifies")," the ",(0,i.kt)("a",{parentName:"td",href:"@"},"scope")," from which ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," are to be selected.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<grouptagslist>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a (non-empty) comma-separated list of ",(0,i.kt)("a",{parentName:"td",href:"@"},"grouptags"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<termidlist>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a (non-empty) comma-separated list of ",(0,i.kt)("a",{parentName:"td",href:"@"},"termids"),".")))),(0,i.kt)("p",null,"This syntax is processed as follows:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Select the source")," from which to obtain the ",(0,i.kt)("a",{parentName:"li",href:"@"},"terms"),", as follows:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If both ",(0,i.kt)("inlineCode",{parentName:"li"},"<scopetag>")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"<vsntag>")," are omitted, the set of ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated texts")," of the current ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope")," is selected as the source."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"<scopetag>")," is specified, then one of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRGs")," that exist in that ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope")," is selected as the source. If it is not specified, then the current ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope")," will provide the source."),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"<vsntag>")," is specified, then the ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG")," of the selected ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope")," that has the specified ",(0,i.kt)("inlineCode",{parentName:"li"},"<vsntag>")," is selected as the source. If it is not specified, then the default version of that ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope's")," ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG")," (as specified in that ",(0,i.kt)("a",{parentName:"li",href:"@"},"scope's")," ",(0,i.kt)("a",{parentName:"li",href:"@"},"SAF"),") is selected as the source.")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Select the ",(0,i.kt)("a",{parentName:"strong",href:"@"},"terms"))," from the selected source that are to be added, as follows:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In case the instruction starts with the keyword ",(0,i.kt)("inlineCode",{parentName:"li"},"tags"),", every ",(0,i.kt)("a",{parentName:"li",href:"@"},"term")," is selected of which its specification (i.e. either a ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated text"),", or an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry"),", depending on the selected source), mentions any of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"grouptags")," in its ",(0,i.kt)("inlineCode",{parentName:"li"},"grouptags"),"-field."),(0,i.kt)("li",{parentName:"ul"},"In case the instruction starts with the keyword ",(0,i.kt)("inlineCode",{parentName:"li"},"termids"),", every ",(0,i.kt)("a",{parentName:"li",href:"@"},"term")," is selected of which its specification (i.e. either a ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated text"),", or an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry"),") mentions one of the specified ",(0,i.kt)("a",{parentName:"li",href:"@"},"termids")," in its ",(0,i.kt)("inlineCode",{parentName:"li"},"id"),"-field."),(0,i.kt)("li",{parentName:"ul"},"In case the instruction starts with the ",(0,i.kt)("inlineCode",{parentName:"li"},"*"),"-character, every ",(0,i.kt)("a",{parentName:"li",href:"@"},"term")," is selected that is contained within the selected source.")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Add the ",(0,i.kt)("a",{parentName:"strong",href:"@"},"terms"))," to the tuple set, as follows:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A tuple is created, consisting of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"termid")," and ",(0,i.kt)("a",{parentName:"li",href:"@"},"term")," as selected, and all ",(0,i.kt)("a",{parentName:"li",href:"@"},"grouptags")," that are associated with the selected ",(0,i.kt)("a",{parentName:"li",href:"@"},"term")," (from the ",(0,i.kt)("inlineCode",{parentName:"li"},"grouptags")," field of the ",(0,i.kt)("a",{parentName:"li",href:"@"},"curated text")," or ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry"),", depending on the kind of source)"),(0,i.kt)("li",{parentName:"ul"},"If the ",(0,i.kt)("a",{parentName:"li",href:"@"},"termid")," of a selected ",(0,i.kt)("a",{parentName:"li",href:"@"},"term")," already exists in a tuple in the tuple set, that tuple is removed from the tuple set."),(0,i.kt)("li",{parentName:"ul"},"The tuple is added to the tuple set.",(0,i.kt)("sup",{parentName:"li",id:"fnref-1"},(0,i.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")))),(0,i.kt)("h3",{id:"syntax-remove"},"Removing terms from the tuple set"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"@"},"curator")," can remove ",(0,i.kt)("a",{parentName:"p",href:"@"},"terms")," from the tuple set, using the following syntax (whitespace is disregarded):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-tags [ <grouptagslist> ]")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-termids [ <termidlist> ]"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Examples"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Instruction"),(0,i.kt)("th",{parentName:"tr",align:"left"},"What it does when processed"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"-tags[management,governance]")),(0,i.kt)("td",{parentName:"tr",align:"left"},"removes all tuples for ",(0,i.kt)("a",{parentName:"td",href:"@"},"terms")," that are associated with the ",(0,i.kt)("a",{parentName:"td",href:"@"},"grouptag")," ",(0,i.kt)("inlineCode",{parentName:"td"},"management")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"governance"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"-termids[party]")),(0,i.kt)("td",{parentName:"tr",align:"left"},"removes the tuple for the ",(0,i.kt)("a",{parentName:"td",href:"@"},"term")," ",(0,i.kt)("inlineCode",{parentName:"td"},"party"),"."))))),(0,i.kt)("p",null,"  where:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"symbol"),(0,i.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<grouptagslist>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a (non-empty) comma-separated list of ",(0,i.kt)("a",{parentName:"td",href:"@"},"grouptags"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<termidlist>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"a (non-empty) comma-separated list of ",(0,i.kt)("a",{parentName:"td",href:"@"},"termids"),".")))),(0,i.kt)("p",null,"This syntax is processed as follows:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In case the instruction starts with ",(0,i.kt)("inlineCode",{parentName:"li"},"-tags"),", every tuple in the tuple set that is associated with at least one of the listed ",(0,i.kt)("a",{parentName:"li",href:"@"},"grouptags")," is removed from that set."),(0,i.kt)("li",{parentName:"ul"},"In case the instruction starts with ",(0,i.kt)("inlineCode",{parentName:"li"},"-termids"),", every tuple that is associated with any of the specified ",(0,i.kt)("a",{parentName:"li",href:"@"},"termids")," is removed from the tuple set.")),(0,i.kt)("h3",{id:"syntax-rename"},"Renaming a term in the tuple set"),(0,i.kt)("p",null,"A ",(0,i.kt)("a",{parentName:"p",href:"@"},"curator")," can rename a ",(0,i.kt)("a",{parentName:"p",href:"@"},"term")," in the tuple set, using the following syntax (whitespace is disregarded):"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rename <termid> <term>"),".")),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Syntax examples"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Instruction"),(0,i.kt)("th",{parentName:"tr",align:"left"},"What it does when it is processed"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"rename party partij")),(0,i.kt)("td",{parentName:"tr",align:"left"},"renames the ",(0,i.kt)("a",{parentName:"td",href:"@"},"term")," that is currently associated with the ",(0,i.kt)("a",{parentName:"td",href:"@"},"termid")," ",(0,i.kt)("inlineCode",{parentName:"td"},"party")," into ",(0,i.kt)("inlineCode",{parentName:"td"},"partij"),"."))))),(0,i.kt)("p",null,"where:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"symbol"),(0,i.kt)("th",{parentName:"tr",align:"left"},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<termid>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the ",(0,i.kt)("a",{parentName:"td",href:"@"},"termid")," of the tuple that will be selected for renaming.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<term>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the new value for the ",(0,i.kt)("inlineCode",{parentName:"td"},"term")," element in the tuple; it will effectively overwrite the existing value }")))),(0,i.kt)("p",null,"This syntax is processed by first selecting the tuple (in the tuple set that is being constructed) that has the specified ",(0,i.kt)("inlineCode",{parentName:"p"},"<termid>")," as its ",(0,i.kt)("inlineCode",{parentName:"p"},"termid"),"-field, and then replacing the value of the ",(0,i.kt)("inlineCode",{parentName:"p"},"term")," field with the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"<term>")," as specified."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Editor's note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The ability to rename terms as they are imported may introduce some issues related to other field-names, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"termid"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"formphrases"),", and perhaps others. Perhaps this syntax should therefore be extended, enabling ",(0,i.kt)("a",{parentName:"p",href:"@"},"curators")," to simultaneously change these (and other) fields in the ",(0,i.kt)("a",{parentName:"p",href:"@"},"MRG entry"),"."))),(0,i.kt)("div",{className:"footnotes"},(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ol",{parentName:"div"},(0,i.kt)("li",{parentName:"ol",id:"fn-1"},"In practice, tuples would typically also contain all other attributes that are associated with terms, similar, if not exactly the same as an ",(0,i.kt)("a",{parentName:"li",href:"@"},"MRG entry"),".",(0,i.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}k.isMDXComponent=!0}}]);